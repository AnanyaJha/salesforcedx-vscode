I"~<p>Here’s some information on how to get past roadblocks that you might encounter while using Salesforce Extensions for VS Code.</p>

<h2 id="sfdx-commands-arent-available">SFDX Commands Aren’t Available</h2>

<p>If you don’t see any SFDX commands in the command palette, make sure that you’re working on a Salesforce DX project and that you have the latest version of Salesforce CLI.</p>

<ol>
  <li>Make sure that the root directory you have open in VS Code contains an <code>sfdx-project.json</code> file. If you haven’t set up a Salesforce DX project, check out <a href="https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_workspace_setup.htm">Project Setup</a> in the <em>Salesforce DX Developer Guide</em>.</li>
  <li><a href="https://developer.salesforce.com/docs/atlas.en-us.sfdx_setup.meta/sfdx_setup/sfdx_setup_update_cli.htm">Update Salesforce CLI</a>, as described in the <em>Salesforce DX Setup Guide</em>.</li>
</ol>

<h2 id="set-your-java-version">Set Your Java Version</h2>

<p>See: <a href="getting-started/java-setup">Java Configuration</a></p>

<h2 id="set-salesforce-cli-path-windows">Set Salesforce CLI Path (Windows)</h2>

<p>See <a href="https://developer.salesforce.com/tools/sfdxcli">Installing the Salesforce CLI</a>. After installing Salesforce CLI, if you get the error ‘Salesforce CLI is not installed’, most likely Salesforce CLI is not added as a path variable. To verify or add Salesforce CLI to your Windows path variable:</p>

<ol>
  <li>
    <p>Search for <code>Edit the system environment variables</code>.
<img align="center" width="80%" height="80%" src="../images/troubleshooting_set_cli_path.1.png" alt="Windows Search" /></p>
  </li>
  <li>
    <p>In <code>System Properties</code>, click <code>Environment Variables</code>.
<img align="center" width="80%" height="80%" src="../images/troubleshooting_set_cli_path.2.png" alt="System Properties" /></p>
  </li>
  <li>
    <p>Under <code>User Variables</code>, double-click <code>Path</code> .
<img align="center" width="80%" height="80%" src="../images/troubleshooting_set_cli_path.3.png" alt="User Variables" /></p>
  </li>
  <li>
    <p>Verify Salesforce CLI is listed as an entry. Otherwise, click New and paste the path where you installed CLI. For example, <code>C:\Program Files\Salesforce CLI\bin</code> 
<img align="center" width="80%" height="80%" src="../images/troubleshooting_set_cli_path.4.png" alt="Path View" /></p>
  </li>
  <li>
    <p>Click <code>OK</code>.</p>
  </li>
</ol>

<h2 id="monitor-apex-language-server-output">Monitor Apex Language Server Output</h2>

<p>The Apex Language Server is an implementation of the <a href="https://github.com/Microsoft/language-server-protocol">Language Server Protocol</a> 3.0 specification. The Language Server Protocol allows a tool (in this case, VS Code) to communicate with a language smartness provider (the server). VS Code uses the Apex Language Server to show outlines of Apex classes and triggers, code-completion suggestions, and syntactic errors. To see all diagnostic information from the Apex Language Server, select <strong>View</strong> &gt; <strong>Output</strong>, then choose <strong>Apex Language Server</strong> from the dropdown menu. The diagnostic information gives you insights into the progress of the language server and shows the problems encountered.</p>

<h2 id="activate-the-apex-language-server">Activate the Apex Language Server</h2>

<p>If the Apex features aren’t available, activate the Apex Language Server. In the VS Code menu bar, select <strong>View</strong> &gt; <strong>Output</strong> and select <strong>Apex Language Server</strong> from the drop-down list on the right. If you don’t see an “Apex Language Server” entry, the language server didn’t activate.</p>

<p>If the Apex Language Server didn’t activate, ensure that you’ve:</p>

<ol>
  <li>Opened a Salesforce DX project that has a valid <code>sfdx-project.json</code> file.</li>
  <li>Opened the Salesforce DX project as a top-level folder.</li>
  <li>Installed Java 8 or Java 11; you’ll see a warning if neither version is installed.</li>
</ol>

<p>If you’ve checked all of the above and nothing is working, check for errors in VS Code itself. In the VS Code menu bar, select <strong>Help</strong> &gt; <strong>Toggle Developer Tools</strong>, click <strong>Console</strong>, and search for relevant messages.</p>

<h2 id="see-debugger-errors">See Debugger Errors</h2>

<p>To see errors generated by the debuggers, add <code>"trace": "all"</code> in your <code>launch.json</code> file. Then, re-run your scenario to view debugger log lines in VS Code’s Debug Console.</p>

<h2 id="improve-deployment-times-for-apex-code">Improve Deployment Times for Apex Code</h2>

<p>If your deployment times for Apex code are slow, your org might have the <code>CompileOnDeploy</code> preference set to <code>true</code>. For details about this preference, see <a href="https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_deploying.htm">Deploying Apex</a> in the <em>Apex Developer Guide</em>.</p>

<h2 id="other-resources">Other Resources</h2>

<p>For Apex Debugger troubleshooting information, see <a href="../apex/interactive-debugger">Apex Interactive Debugger</a>.</p>

<p>For general information about VS Code, see the <a href="https://code.visualstudio.com/docs">Visual Studio Code docs</a>.</p>

<p>For troubleshooting information for Salesforce CLI, which powers much of the functionality in Salesforce Extensions for VS Code, see <a href="https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_troubleshoot.htm">Troubleshoot Salesforce DX</a> in the <em>Salesforce DX Developer Guide</em>.</p>
:ET